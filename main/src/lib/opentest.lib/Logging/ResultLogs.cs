using System.Text.Json;
using System.Text.Json.Serialization;

namespace ProtoLab.OpenTest;

public class ResultLogs : Output
{
    private readonly List<string> messages = new();

    public string Test { get; private set; }
    public string Assert { get; private set; }
    public string[] Messages => messages.ToArray();
    [JsonIgnore]
    public override bool HasOutput => Messages.Any() || !string.IsNullOrEmpty(Test) || !string.IsNullOrEmpty(Assert);

    public ResultLogs() { }

    public override void Log(string logEntry)
    {
        messages.Add(logEntry);
    }
    public override void Set<T>(string property, T value)
    {
        switch (property)
        {
            case "Func":
                Test = $"{value}";

                break;
            case "Assert":
                Assert = $"{value}";

                break;
        }
    }
    public override void ToJson(Utf8JsonWriter writer)
    {
        writer.WriteStartObject();
        writer.WriteString("assert", Test);
        writer.WriteString("result", Assert);
        writer.WriteStartArray("messages");
        foreach (var msg in Messages)
        {
            writer.WriteStringValue(msg);
        }
        writer.WriteEndArray();
        writer.WriteEndObject();
    }
}
