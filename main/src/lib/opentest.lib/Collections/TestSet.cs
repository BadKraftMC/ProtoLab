namespace ProtoLab.OpenTest;

public delegate Agent TestAssert();
public delegate Agent TestAssertVerbose(bool isVerbose);

public abstract class TestSet
{
    internal static readonly TestContext TestContext = TestContext.Current;

    internal Type Type { get; }

    public string SetName => Type.Name;
    public TestCase[] TestCases { get; }

    // can be null if the test set container is a static class
    public static TestAssert Assert => () => TestContext.Agent;
    public static TestAssertVerbose AssertVerbose => (f) => TestContext.Agent;

    public TestSet(KeyValuePair<Type, List<MethodInfo>> info)
    {
        Type = info.Key;
        TestCases = info.Value
            .ToArray(m => (TestCase)m);
    }

    public bool HasTestCases()
    {
        return TestCases.Length > 0;
    }
    public object ConstructTestTarget()
    {
        return Activator.CreateInstance(Type) ?? new();
    }
    public IEnumerator<TestCase> GetMethodIterator()
    {
        foreach (var tc in TestCases)
        {
            yield return tc;
        }
    }
}
